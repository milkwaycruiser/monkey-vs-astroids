// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile1 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "level5":
            case "level4":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
2 2 2 2 . . . . . . . . . . . . 
. . 2 2 2 . . . . . . . . 2 2 2 
. . . . 2 2 . . . . . . 2 2 . . 
. . . . . . . . . . 2 2 2 2 . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . 2 2 . . . . . . . . . 
. . . . . . 2 2 2 2 . . . . . 2 
. . . . . . . . . 2 2 2 2 2 2 2 
2 2 . . . . . . . . . . . . . . 
. 2 . . . . . . . . . . . . . . 
. . . . . . . 2 . . . . . . . . 
. . . . . . . 2 2 2 . . . . . . 
`, [myTiles.transparency16,sprites.castle.tileDarkGrass2,sprites.builtin.forestTiles11,sprites.dungeon.collectibleInsignia], TileScale.Sixteen);
            case "level2":
            case "level1":return tiles.createTilemap(hex``, img`
......2222222222
.............222
.............222
..............22
..............22
..22..........22
..22222.......22
..2222..........
..22222.........
..22222222......
..22222222222...
..22222......2..
..22222.........
..22222222......
..2.2.222222....
..2............2
..222.......2222
..2..........222
..2....22....222
..22..22222..222
......222222.222
......222222.222
..22222222222222
......2222222222
......2222222222
......2222222222
.....22222222222
..22222222222222
...2..22222....2
...22.222.......
..............22
..............22
`, [myTiles.transparency16,sprites.builtin.forestTiles21,sprites.builtin.forestTiles12,sprites.builtin.forestTiles2,sprites.builtin.forestTiles7,sprites.dungeon.collectibleRedCrystal,sprites.builtin.coral1,sprites.castle.tileDarkGrass2,sprites.dungeon.collectibleInsignia], TileScale.Sixteen);
            case "level0":
            case "level3":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
2 2 2 2 . . . . . . . . . . . . 
. . 2 2 2 2 . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . 2 2 2 2 2 2 2 2 
. . . . . . . . 2 . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
2 2 2 2 . . . . . . . . . . . . 
. . . 2 2 2 2 2 . . . . . . . . 
. . . . . . . 2 . . . . . . . . 
2 . . . . . . . . . . . . . . 2 
2 2 2 2 2 2 . . . . . . . . . . 
. . . . . 2 . 2 . . . . . . . . 
. . . . . 2 2 2 . . . . . . . . 
`, [myTiles.transparency16,sprites.builtin.forestTiles0,sprites.castle.rock2,sprites.dungeon.chestClosed], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
            case "myTile":
            case "tile1":return tile1;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
